from xraysource import XRaySource
from scipy.stats import norm, cauchy, rv_continuous
from numpy import sin, cos, exp
from scipy import constants

class Monochromatic(XRaySource):
    """
    This class implements a monochromatic X-ray source with angular spread
    """

    def __init__(self, tilt):
        super(Monochromatic, self).__init__(tilt)

        #not much to do here
        self.stddev = 0.0033 / 3
        self.mean = tilt
        self.anggenerator = norm(loc=self.mean, scale=self.stddev)

    def get_wave(self):
        """
        This function is responsible for generating a random wavefunction and returning it.
        It will be a plane wave tilted by a certain angle and with either a Ka1 or Ka2 wavelength

        @return: A wavefunction generated by this source
        @rtype: function
        """

        wavelength = 1.5418e-10
        #generate an angle
        angle = self.anggenerator.rvs()
        #make a plane wave....
        k = 2 * constants.pi / wavelength
        kx = k * sin(angle)
        kz = k * cos(angle)
        planewave = lambda x, z: exp(1j * kx * x) * exp(1j * kz * z)
        return planewave, wavelength

